name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'server/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'server/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: travelpro_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      run: |
        cd server
        npm ci
    
    - name: Generate Prisma client
      run: |
        cd server
        npx prisma generate
    
    - name: Run database migrations
      run: |
        cd server
        npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/travelpro_test
    
    - name: Run tests
      run: |
        cd server
        npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/travelpro_test
        NODE_ENV: test
    
    - name: Build application
      run: |
        cd server
        npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/travelpro_test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      run: |
        cd server
        npm ci
    
    - name: Run security audit
      run: |
        cd server
        npm audit --audit-level moderate
    
    - name: Run dependency check
      run: |
        cd server
        npm outdated

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
